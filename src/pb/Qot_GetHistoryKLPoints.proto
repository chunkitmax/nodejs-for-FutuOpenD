syntax = "proto2";
package Qot_GetHistoryKLPoints;

import "Common.proto";
import "Qot_Common.proto";

 //當請求時間點數據為空時，如何返回數據
enum NoDataMode
{
	NoDataMode_Null = 0; //直接返回空數據
	NoDataMode_Forward = 1; //往前取值，返回前一個時間點數據
	NoDataMode_Backward = 2; //向後取值，返回後一個時間點數據
}

 //這個時間點返回數據的狀態以及來源
enum DataStatus
{
	DataStatus_Null = 0; //空數據
	DataStatus_Current = 1; //當前時間點數據
	DataStatus_Previous = 2; //前一個時間點數據
	DataStatus_Back = 3; //後一個時間點數據
}

message C2S
{
	required int32 rehabType = 1; //Qot_Common.RehabType,復權類型
	required int32 klType = 2; //Qot_Common.KLType,K線類型
	required int32 noDataMode = 3; //NoDataMode,當請求時間點數據為空時，如何返回數據
	repeated Qot_Common.Security securityList = 4; //股票市場以及股票代碼
	repeated string timeList = 5; //時間字符串
	optional int32 maxReqSecurityNum = 6; //最多返回多少只股票的數據，如果未指定表示不限制
	optional int64 needKLFieldsFlag = 7; //指定返回K線結構體特定某幾項數據，KLFields枚舉值或組合，如果未指定返回全部字段
}

message HistoryPointsKL
{
	required int32 status = 1; //DataStatus,數據狀態
	required string reqTime = 2; //請求的時間
	required Qot_Common.KLine kl = 3; //K線數據
}

message SecurityHistoryKLPoints
{
	required Qot_Common.Security security = 1; //股票	
	repeated HistoryPointsKL klList = 2; //K線數據
}

message S2C
{
	repeated SecurityHistoryKLPoints klPointList = 1; //多只股票的多點歷史K線點
	optional bool hasNext = 2; //如請求不指定maxReqSecurityNum值，則不會返回該字段，該字段表示請求是否還有超過指定限制的數據
}

message Request
{
	required C2S c2s = 1;
}

message Response
{
	required int32 retType = 1 [default = -400]; //RetType,返回結果
	optional string retMsg = 2;
	optional int32 errCode = 3;
	
	optional S2C s2c = 4;
}
